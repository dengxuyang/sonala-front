(this["webpackJsonpbuildspace-solana"]=this["webpackJsonpbuildspace-solana"]||[]).push([[0],{100:function(e,t,n){"use strict";n.r(t);var c=n(11),s=n.n(c),a=n(57),o=n.n(a),i=(n(71),n(72),n(2)),r=n(13),l=n(25),u=n(65),d=n(6);const{SystemProgram:b}=r.d,f=Object.values(u._keypair.secretKey),m=new Uint8Array(f),g=r.d.Keypair.fromSecretKey(m),p=new i.PublicKey(l.metadata.address),y=Object(i.clusterApiUrl)("devnet"),j="processed";var h=()=>{const[e,t]=Object(c.useState)(null),[n,s]=Object(c.useState)(""),[a,o]=Object(c.useState)([]),u=async()=>{const{solana:e}=window;if(e){const n=await e.connect();console.log("Connected with Public Key:",n.publicKey.toString()),t(n.publicKey.toString())}},f=e=>{const{value:t}=e.target;s(t)},m=()=>{const e=new i.Connection(y,j);return new r.b(e,window.solana,j)},h=async()=>{try{const e=m(),t=new r.a(l,p,e);console.log("ping"),await t.rpc.startStuffOff({accounts:{baseAccount:g.publicKey,user:e.wallet.publicKey,systemProgram:b.programId},signers:[g]}),console.log("Created a new BaseAccount w/ address:",g.publicKey.toString()),await w()}catch(e){console.error("Error creating BaseAccount account:",e)}},w=async()=>{try{const e=m(),t=new r.a(l,p,e),n=await t.account.baseAccount.fetch(g.publicKey);console.log("Got the account",n),o(n.gifList)}catch(e){console.log("Error in getGifList: ",e),o(null)}};return Object(c.useEffect)((()=>{const e=async()=>{await(async()=>{try{const{solana:e}=window;if(e)if(e.isPhantom){console.log("Phantom wallet found!");const n=await e.connect({onlyIfTrusted:!0});console.log("Connected with Public Key:",n.publicKey.toString()),t(n.publicKey.toString())}else alert("Solana object not found! Get a Phantom Wallet \ud83d\udc7b")}catch(e){console.error(e)}})()};return window.addEventListener("load",e),()=>window.removeEventListener("load",e)}),[]),Object(c.useEffect)((()=>{e&&(console.log("Fetching GIF list..."),w())}),[e]),Object(d.jsx)("div",{className:"App",children:Object(d.jsx)("div",{className:e?"authed-container":"container",children:Object(d.jsxs)("div",{className:"header-container",children:[Object(d.jsx)("p",{className:"header",children:"\ud83d\udc99IU"}),Object(d.jsx)("p",{className:"sub-text",children:"View your GIF collection in the metaverse \u2728"}),!e&&Object(d.jsx)("button",{className:"cta-button connect-wallet-button",onClick:u,children:"connect to Wallet"}),e&&(null===a?Object(d.jsx)("div",{className:"connected-container",children:Object(d.jsx)("button",{className:"cta-button submit-gif-button",onClick:h,children:"Do One-Time Initialization For GIF Program Account"})}):Object(d.jsxs)("div",{className:"connected-container",children:[Object(d.jsxs)("form",{onSubmit:e=>{e.preventDefault(),(async()=>{if(0!==n.length){s(""),console.log("Gif link:",n);try{const e=m(),t=new r.a(l,p,e);await t.rpc.addGif(n,{accounts:{baseAccount:g.publicKey,user:e.wallet.publicKey}}),console.log("GIF successfully sent to program",n),await w()}catch(e){console.log("Error sending GIF:",e)}}else console.log("No gif link given!")})()},children:[Object(d.jsx)("input",{type:"text",placeholder:"Enter gif link!",value:n,onChange:f}),Object(d.jsx)("button",{type:"submit",className:"cta-button submit-gif-button",children:"Submit"})]}),Object(d.jsx)("div",{className:"gif-grid",children:a.map(((e,t)=>Object(d.jsx)("div",{className:"gif-item",children:Object(d.jsx)("img",{src:e.gifLink,alt:"gifLink"})},t)))})]}))]})})})};o.a.render(Object(d.jsx)(s.a.StrictMode,{children:Object(d.jsx)(h,{})}),document.getElementById("root"))},25:function(e){e.exports=JSON.parse('{"version":"0.1.0","name":"myepicproject","instructions":[{"name":"startStuffOff","accounts":[{"name":"baseAccount","isMut":true,"isSigner":true},{"name":"user","isMut":true,"isSigner":true},{"name":"systemProgram","isMut":false,"isSigner":false}],"args":[]},{"name":"addGif","accounts":[{"name":"baseAccount","isMut":true,"isSigner":false},{"name":"user","isMut":true,"isSigner":true}],"args":[{"name":"gifLink","type":"string"}]}],"accounts":[{"name":"BaseAccount","type":{"kind":"struct","fields":[{"name":"totalGifs","type":"u64"},{"name":"gifList","type":{"vec":{"defined":"ItemStruct"}}}]}}],"types":[{"name":"ItemStruct","type":{"kind":"struct","fields":[{"name":"gifLink","type":"string"},{"name":"userAddress","type":"publicKey"}]}}],"metadata":{"address":"AqxfACPLHjCeQTwEdNuohXyP93Cozkr7Wreh8FU9VAsU"}}')},59:function(e,t){},63:function(e,t){},65:function(e){e.exports=JSON.parse('{"_keypair":{"publicKey":{"0":26,"1":110,"2":34,"3":255,"4":201,"5":189,"6":137,"7":142,"8":139,"9":252,"10":117,"11":136,"12":117,"13":96,"14":65,"15":172,"16":111,"17":65,"18":111,"19":139,"20":39,"21":126,"22":200,"23":132,"24":101,"25":168,"26":65,"27":203,"28":147,"29":74,"30":17,"31":81},"secretKey":{"0":78,"1":111,"2":75,"3":52,"4":131,"5":131,"6":14,"7":87,"8":140,"9":185,"10":31,"11":183,"12":65,"13":95,"14":122,"15":214,"16":236,"17":228,"18":55,"19":144,"20":226,"21":111,"22":147,"23":55,"24":216,"25":168,"26":49,"27":93,"28":58,"29":56,"30":155,"31":38,"32":26,"33":110,"34":34,"35":255,"36":201,"37":189,"38":137,"39":142,"40":139,"41":252,"42":117,"43":136,"44":117,"45":96,"46":65,"47":172,"48":111,"49":65,"50":111,"51":139,"52":39,"53":126,"54":200,"55":132,"56":101,"57":168,"58":65,"59":203,"60":147,"61":74,"62":17,"63":81}}}')},71:function(e,t,n){},72:function(e,t,n){},77:function(e,t){},81:function(e,t){},91:function(e,t){},93:function(e,t){}},[[100,1,2]]]);
//# sourceMappingURL=main.3b6fa802.chunk.js.map